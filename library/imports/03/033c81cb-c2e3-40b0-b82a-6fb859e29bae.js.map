{"version":3,"sources":["../../../../assets/scripts/assets/scripts/ResMgr.js"],"names":["nohandle","cc","Class","ctor","init","resName","resConfig","commonRes","scenePreloadRes","sceneRes","resCache","res_UUID_To_RefCount_Map","curSceneName","undefined","unloadSceneRes","sceneName","sceneResMap","log","resNameVal","unloadRes","loadTempRes","onFinished","resData","resObj","loadedCallback","err","assets","bind","loadRes","error","refCount","assert","resDeps","key","resUUID","loader","release","updateDepsUUIDCount","resConfigVal","warn","RawAsset","getDependsRecursively","resType","loadCommon","onProgress","loadedNum","totalNum","length","loadedResItem","loadedResName","resKey","loadScene","preloadResList","preSceneName","director","preloadScene","sceneAssets","info","_getSceneUuid","dependAssets","uuid","getRes","loadEditorRes","url","sys","isNative","platform","WIN32","MACOS","editorConfig","resMgr","path","workPath","jsonStr","jsb","fileUtils","getStringFromFile","JSON","parse","writeEditorRes","content","writeStringToFile"],"mappings":"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","file":"ResMgr.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["function nohandle(){\n\n}\n\ncc.Class({\n    ctor(){\n        /*\n        设计思想：\n        进游戏时，先加载CommonRes，公共资源，该资源永远不会释放，资源引用计数永远大于0\n        加载场景的时候，先预加载必须资源，如果必须资源与公共资源的某个SpritFrame相同，那么\n        该SpriteFrame和该SpriteFrame所在的Texture的引用计数都会加1，有两张表，一个是resCache\n        一个是res_UUID_To_RefCount_Map，resCache是用来记录由外部使用的资源对象的引用计数，\n        当场景切换完毕后，旧场景所引用的资源引用计数都会减1，当然由于是场景切换完毕后，所以新场景\n        如果引用了旧场景的资源，那么被引用的资源引用计数会先加1，所以后来的减1不会使用该资源的引用计数\n        变成0，那么res_UUID_To_RefCount_Map的作用是什么呢，有了resCache为什么还要有res_UUID_To_RefCount_Map，因为一个由resCache标记为可删除的资源，是不是就可以完全从缓存\n        中删除了，不是的，因为两个看似完全不相关的资源，有可能A中引用了B中的所依赖的一张小图，特别是\n        做游戏特效的时候，就会出现这种问题，这时就必须从更细的粒度去解决这个问题，把resCache中标记为\n        可删除的资源的所有依赖资源都取出来，然后挨个判断他们的引用计数是否也为0，如果为0，那么表示该“”“子资源”是可以删除的，否则就不能删除。\n        所以使用的时候，就是一个场景如果要使用某个资源，要么预加载，然后使用getRes进行获取，\n        要么临时加载，使用loadTempRes进行获取，同个场景，多个地方引用同个资源，引用计数不用加1，\n        因为我们是以切换场景，来启动资源删除的。如果同个场景不同地方引用同个资源也将引用计数加1，\n        那么释放的时候，就要手动调用unloadRes了，这样做很麻烦，而且一旦忘记添加，该资源就永远不会\n        删除了，因为该资源的引用计数永远都大于0了。\n        对于持久化的资源，就不要使用loadTempRes了，既然要持久化，那不能切换场景的时候，进行资源删除，\n        所以不能让sceneRes记录该资源，那么方法就是直接使用loadRes进行资源加载，使用unloadRes卸载资源，绕过sceneRes的记录。\n        */\n    },\n    init(resName,resConfig,commonRes,scenePreloadRes){\n        this.resName = resName;\n        this.resConfig = resConfig;\n        this.commonRes = commonRes;\n        //场景预加载资源\n        this.scenePreloadRes = scenePreloadRes;\n\n        //场景已加载资源记录，切换场景时释放资源\n        this.sceneRes = {\n\n        }\n        //这个缓存是提供给游戏应用层使用的资源对象\n        this.resCache = {\n            //[this.resName.xx]:{resObj:xxobj,refCount:0},\n        }\n        //这个是用来作依赖删除记录的\n        this.res_UUID_To_RefCount_Map = {\n            //[uuid]:0, 其中0是资源对应引用计数\n        }\n        this.curSceneName = undefined;\n    },\n    unloadSceneRes(sceneName){\n        if(!sceneName){\n            return;\n        }\n        var sceneResMap = this.sceneRes[sceneName];\n        if(!sceneResMap){\n            cc.log(sceneName,\"has not load any res\");\n            return;\n        }\n        for(var resNameVal in sceneResMap){\n            if(resNameVal){\n                this.unloadRes(resNameVal);\n            }\n        }\n        delete this.sceneRes[sceneName];\n    },\n    //用来加载特效，图标，等，切换场景后立即释放的资源 \n    loadTempRes(resNameVal,onFinished){\n\n        onFinished = onFinished || nohandle;\n\n        //确保该场景只加载过一次该资源，让临时资源的引用计数不会超过1\n        if(this.sceneRes[sceneName][resNameVal]){\n            var resData = this.resCache[resNameVal];\n            onFinished(undefined,resData.resObj);\n            return;\n        }\n        var loadedCallback = function(err,resNameVal,assets){\n            if(!err){        \n                this.sceneRes[sceneName][resNameVal]=true;\n            }\n            onFinished(err,assets);\n        }.bind(this);\n        this.loadRes(resNameVal,loadedCallback);\n    },\n    //立即释放资源，一般情况下，由切换场景时，自动调用\n    //如果资源是持久资源，不由切换场景控制，那么可由外部调用，自行控制资源生命周期\n    unloadRes(resNameVal){\n        var resData = this.resCache[resNameVal];\n        if(!resData){\n            cc.error(\"ResMgr:unloadRes\",resNameVal,\"not exits\");\n            return;\n        }\n        resData.refCount--;\n        cc.assert(resData.refCount>=0,\"ResMgr:unloadRes\",resNameVal,\"refCount < 0\");\n        if(resData.refCount<=0){\n            cc.log(\"ResMgr:unloadRes\",resNameVal);\n            var resDeps = resData.resDeps;\n            if(resDeps){\n                cc.log(\"ResMgr:unloadRes\",resNameVal,\"release deps\");\n                for(var key in resDeps){\n                    var resUUID = resDeps[key];\n                    this.res_UUID_To_RefCount_Map[resUUID]--;\n                    cc.assert(resData.refCount>=0,\"ResMgr:unloadRes\",resUUID,\"uuid refCount < 0\");\n                    if(this.res_UUID_To_RefCount_Map[resUUID]<=0){\n                        cc.loader.release(resUUID);\n                        delete this.res_UUID_To_RefCount_Map[resUUID];\n                    }\n                }\n            }else{\n                cc.log(\"ResMgr:unloadRes\",resNameVal,\"release by path\");\n                cc.loader.release(resNameVal);\n            }\n            delete this.resCache[resNameVal];\n        }\n        //cc.log(\"-------------------------------\");\n        //cc.log(\"resCache is\",this.resCache);\n        //cc.log(\"res_UUID_To_RefCount_Map is\",this.res_UUID_To_RefCount_Map);\n        //cc.log(\"-------------------------------\");\n    },\n    updateDepsUUIDCount(resDeps){\n        for(var key in resDeps){\n            var resUUID = resDeps[key];\n            this.res_UUID_To_RefCount_Map[resUUID] = this.res_UUID_To_RefCount_Map[resUUID] || 0\n            this.res_UUID_To_RefCount_Map[resUUID]++;\n        }\n    },\n    //加载资源，如果缓存有，只接从缓存中取，但引用计数会加1\n    //因为不同的场景有可能共享资源，我们会等到新的场景加载完后，再去释放旧场景\n    //的资源，那么此时只释放引用计数为0的资源，就可以达到目的了\n    loadRes(resNameVal,onFinished){\n\n        onFinished = onFinished || nohandle;\n\n        var resData = this.resCache[resNameVal];\n        if(resData){\n            resData.refCount++;\n            cc.log(\"ResMgr:loadRes from cache\",resNameVal,\"count\",resData.refCount);\n            onFinished(undefined,resData.resObj,resNameVal);\n            return;\n        }\n\n        var resConfigVal = this.resConfig[resNameVal]||{};\n\n        var loadedCallback = function(err,assets){\n            if (err) {\n                cc.warn(\"ResMgr:loadRes\",resNameVal,\"failure\",err);\n                onFinished(err,undefined,resNameVal);\n                return;\n            }\n\n            //记录引用计数\n            var resDeps = undefined;\n            //如果不是RawAsset对象，则该资源不存在依赖资源，删除的时候\n            //直接把自己删了就可以了，而且别的资源也不可能引用到该资源。\n            if(assets instanceof cc.RawAsset){\n                resDeps = cc.loader.getDependsRecursively(assets);\n                this.updateDepsUUIDCount(resDeps);\n            }\n            \n            cc.log(\"ResMgr:loadRes succeess\",resNameVal);\n\n            //存储资源对象\n            this.resCache[resNameVal]={resObj:assets,refCount:1,resDeps:resDeps};\n            onFinished(undefined,assets,resNameVal);\n        }.bind(this);\n\n        if(resConfigVal.resType){\n            cc.log(\"ResMgr:loadRes by resType\",resNameVal);\n            cc.loader.loadRes(resNameVal,resConfigVal.resType,loadedCallback);\n        }else{\n            cc.log(\"ResMgr:loadRes\",resNameVal);\n            cc.loader.loadRes(resNameVal,loadedCallback);\n        }\n    },\n    loadCommon(onFinished,onProgress){\n\n        onFinished = onFinished || nohandle;\n        onProgress = onProgress || nohandle;\n\n        var loadedNum = 0;\n        var totalNum = this.commonRes.length;\n        var loadedResItem = function(err,assets,loadedResName){\n            if(err){\n                cc.log(\"ResMgr:loadCommon\",loadedResName,\"failure\");\n                onProgress(err,loadedResName);\n                return;\n            }\n            cc.log(\"ResMgr:loadCommon\",loadedResName,\"finished\");\n            loadedNum++;\n            onProgress(undefined,loadedResName,loadedNum,totalNum);\n            if(loadedNum==totalNum){\n                onFinished();\n            }\n        }.bind(this);\n\n        for(var resKey in this.commonRes){\n            this.loadRes(this.commonRes[resKey],loadedResItem);\n        }\n    },\n    loadScene(sceneName,onFinished,onProgress){\n\n        onFinished = onFinished || nohandle;\n        onProgress = onProgress || nohandle;\n        this.sceneRes[sceneName] = this.sceneRes[sceneName] || {};\n\n        var preloadResList = this.scenePreloadRes[sceneName]||[];\n        var loadedNum = 0;\n        var totalNum = preloadResList.length+1;\n        var loadedResItem = function(err,assets,loadedResName){\n            if(err){\n                cc.log(\"ResMgr:loadScene\",loadedResName,\"failure\");\n                onProgress(err,loadedResName);\n                return;\n            }\n            cc.log(\"ResMgr:loadScene\",loadedResName,\"finished\");\n            loadedNum++;\n            onProgress(undefined,loadedResName,loadedNum,totalNum);\n            this.sceneRes[sceneName][loadedResName]=true;\n            if(loadedNum==totalNum){\n                var preSceneName = this.curSceneName\n                this.curSceneName = sceneName;\n                onFinished();\n                this.unloadSceneRes(preSceneName);\n            }\n        }.bind(this);\n        \n        for(var resKey in preloadResList){\n            this.loadRes(preloadResList[resKey],loadedResItem);\n        }\n\n        cc.director.preloadScene(sceneName, function(err,sceneAssets) {\n            if(!err){\n                var info = cc.director._getSceneUuid(sceneName);\n                var dependAssets = cc.loader.getDependsRecursively(info.uuid);\n\n                //存储资源对象\n                this.updateDepsUUIDCount(dependAssets);\n                this.resCache[sceneName]={resObj:sceneAssets,\n                                          refCount:1,\n                                          resDeps:dependAssets};\n            }\n            loadedResItem(err,sceneAssets,sceneName);\n        }.bind(this));\n    },\n    getRes(resName){\n        var resData =  this.resCache[resName];\n        if(!resData)\n            return undefined;\n        return resData.resObj;\n    },\n    //加载没有uuid的资源文件\n    loadEditorRes(url,onFinished){\n        if(cc.sys.isNative&&\n            (cc.sys.platform == cc.sys.WIN32||cc.sys.platform == cc.sys.MACOS)\n        ){\n            this.editorConfig = this.editorConfig || cc.resMgr.getRes(cc.resName.editorConfig);\n\n            var path = this.editorConfig.workPath+\"/\"+url+\".json\";\n            var jsonStr = jsb.fileUtils.getStringFromFile(path);\n\n            cc.log(\"---------------------------\");\n            cc.log(\"ResMgr:loadEditorRes path\",path);\n            cc.log(\"ResMgr:loadEditorRes json\",jsonStr);\n            cc.log(\"---------------------------\");\n\n            if(jsonStr){\n                onFinished(undefined,JSON.parse(jsonStr));\n            }else{\n                onFinished(true);\n            }\n        }else{\n            this.loadRes(url,onFinished);\n        }\n    },\n    writeEditorRes(url,content){\n        if(cc.sys.isNative&&\n        (cc.sys.platform == cc.sys.WIN32||cc.sys.platform == cc.sys.MACOS)\n        ){\n            this.editorConfig = this.editorConfig || cc.resMgr.getRes(cc.resName.editorConfig);\n            jsb.fileUtils.writeStringToFile(content,this.editorConfig.workPath+url);\n        }else{\n            cc.warn(\"ResMgr:writeEditorRes failure,platform id:\",cc.sys.platform);\n        }\n        cc.log(\"---------------------------\");\n        cc.log(\"ResMgr:writeEditorRes path\",url);\n        cc.log(\"ResMgr:writeEditorRes json\",content);\n        cc.log(\"---------------------------\");\n    }\n})"]}