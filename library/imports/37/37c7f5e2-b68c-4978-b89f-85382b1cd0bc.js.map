{"version":3,"sources":["../../../../../assets/scripts/component/assets/scripts/component/GameMap.js"],"names":["Map","require","cc","Class","extends","properties","start","Pool","gridPool","setBuildFunc","parent","gridNode","Node","addComponent","Sprite","bind","setResetFunc","color","removeFromParent","atlas","resMgr","getRes","resName","commonui","node","on","mouseDownHandle","mouseMoveHandle","mouseUpHandle","mouseLeaveHandle","mouseEnterHandle","globalEvent","updateMap","initMap","curPassData","passData","getCurPassData","commonConfig","getCommonConfig","permitNextTurn","onDestroy","off","timer","removeByType","reset","mapSize","removeAllChildren","setContentSize","w","h","mapInfo","configData","scale","updateMapPos","posx","posy","utils","alert","initGameData","preStep","backTurn","log","preTurnData","getPreTurn","mapData","rowKey","rowData","colKey","colData","updateGrid","material","roleData","roleReachNum","roleReachNeedNum","length","checkPermitNextTurn","reachCallback","eachRoleData","path","pathIdx","removeFromGrid","row","col","matType","addToGrid","roleDataKey","error","role","hasOwnProperty","loop","createGrid","grid","name","pos","getGridPosByRowCol","x","y","getChildByName","matTypeToName","matShowOrderMap","matIcon","spNode","get","sp","getComponent","spriteFrame","getSpriteFrame","matName","zIndex","children","i","push","removeAllFromGrid","event","isMouseDown","mousePos","getLocation","isDrag","curMousePos","Math","abs","getDelta","isMouseMove","newX","newY","emit","oldPos","newPos","convertToNodeSpace","v2","gridInfo","getGridInfoByMousePos","playerToHandle","alias","matAlias","sameMatSize","j"],"mappings":"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","file":"GameMap.js","sourceRoot":"../../../../../assets/scripts/component","sourcesContent":["var Map = require(\"Map\")\ncc.Class({\n    extends: Map,\n\n    properties: {\n\n    },\n\n    // onLoad () {},\n\n    start(){\n\n        var Pool = require(\"Pool\");\n        this.gridPool = new Pool();\n        this.gridPool.setBuildFunc(function(parent){\n            var gridNode = new cc.Node();\n            gridNode.addComponent(cc.Sprite);\n            return gridNode;\n        }.bind(this));\n        this.gridPool.setResetFunc(function(gridNode){\n            gridNode.color = cc.color(255,255,255);\n            gridNode.removeFromParent();\n        }.bind(this));\n\n        this.atlas = cc.resMgr.getRes(cc.resName.commonui);\n        this.node.on('mousedown',this.mouseDownHandle,this);\n        this.node.on('mousemove',this.mouseMoveHandle,this);\n        this.node.on('mouseup',this.mouseUpHandle,this);\n        this.node.on('mouseleave',this.mouseLeaveHandle,this);\n        this.node.on('mouseenter',this.mouseEnterHandle,this);\n\n        this.node.on('touchstart',this.mouseDownHandle,this);\n        this.node.on('touchmove',this.mouseMoveHandle,this);\n        this.node.on('touchend',this.mouseUpHandle,this);\n        this.node.on('touchcancel',this.mouseLeaveHandle,this);\n\n        cc.globalEvent.on(\"CurData:UpdateMap\",this.updateMap,this);\n        cc.globalEvent.on(\"CurData:InitGameData\",this.initMap,this);\n\n        this.curPassData = cc.passData.getCurPassData();\n        this.commonConfig = cc.passData.getCommonConfig();\n        this.permitNextTurn = true;\n        this.initMap();\n    },\n\n    onDestroy(){\n        this.node.off('mousedown',this.mouseDownHandle,this);\n        this.node.off('mousemove',this.mouseMoveHandle,this);\n        this.node.off('mouseup',this.mouseUpHandle,this);\n        this.node.off('mouseleave',this.mouseLeaveHandle,this);\n        this.node.off('mouseenter',this.mouseEnterHandle,this);\n\n        this.node.off('touchstart',this.mouseDownHandle,this);\n        this.node.off('touchmove',this.mouseMoveHandle,this);\n        this.node.off('touchend',this.mouseUpHandle,this);\n        this.node.off('touchcancel',this.mouseLeaveHandle,this);\n\n        cc.globalEvent.off(\"CurData:UpdateMap\",this.updateMap,this);\n        cc.globalEvent.off(\"CurData:InitGameData\",this.initMap,this);\n        cc.timer.removeByType(\"GameMap\");\n    },\n    // update (dt) {},\n\n    initMap(){\n        this.gridPool.reset();\n\n        var mapSize = this.curPassData.mapSize;\n        this.node.removeAllChildren();\n        this.node.setContentSize(mapSize.w,mapSize.h); \n\n        var mapInfo = this.curPassData.configData.mapInfo;\n        this.node.scale = mapInfo.scale;\n        this.updateMapPos(mapInfo.posx,mapInfo.posy);\n\n        this.updateMap();\n    },\n\n    reset(){\n        cc.utils.alert(\"Reset Pass?\",function(){\n            this.curPassData.initGameData();\n        }.bind(this));\n    },\n\n    preStep(){\n        if(this.permitNextTurn){\n            this.curPassData.backTurn();\n        }else{\n            cc.log(\"GameMap:mouseUpHandle permitNextTurn\",this.permitNextTurn);\n        }\n    },\n\n    updateMap(){\n        var preTurnData = this.curPassData.getPreTurn();\n        var mapData = preTurnData.mapData;\n        for(var rowKey in mapData){\n            var rowData = mapData[rowKey];\n            if(!rowData)continue;\n            for(var colKey in rowData){\n                var colData = rowData[colKey];\n                if(!colData)continue;\n                this.updateGrid(rowKey,colKey,colData.material);\n            }\n        }\n\n        var roleData = preTurnData.roleData;\n        var roleReachNum = 0;\n        var roleReachNeedNum = roleData.length;\n        this.permitNextTurn = false;\n\n        var checkPermitNextTurn = function(){\n            if(roleReachNeedNum==roleReachNum){\n                this.permitNextTurn = true;\n            }\n        }.bind(this);\n\n        var reachCallback = function(eachRoleData){\n            var path = eachRoleData.path;\n            var pathIdx = eachRoleData.pathIdx;\n            this.removeFromGrid(path[pathIdx].row,path[pathIdx].col,eachRoleData.matType);\n            pathIdx++;\n            eachRoleData.pathIdx = pathIdx;\n            this.addToGrid(path[pathIdx].row,path[pathIdx].col,eachRoleData.matType);\n            if(pathIdx>=path.length-1){\n                eachRoleData.pathIdx = 0;\n                roleReachNum++;\n                checkPermitNextTurn();\n            }\n        }.bind(this);\n\n        for(var roleDataKey in roleData){\n            var eachRoleData = roleData[roleDataKey];\n            eachRoleData.pathIdx = 0;\n\n            var path = eachRoleData.path;\n            var pathIdx = eachRoleData.pathIdx; \n            if(!path){\n                cc.error(\"path is null\");\n            }\n            if(path.length==0){\n                var role = this.addToGrid(eachRoleData.row,eachRoleData.col,eachRoleData.matType);\n                if(eachRoleData.hasOwnProperty(\"freezeBout\")){\n                    role.color = cc.color(100,100,100);\n                }else{\n                    role.color = cc.color(255,255,255);\n                }\n                roleReachNum++;\n                checkPermitNextTurn();\n            }else{\n                this.addToGrid(path[pathIdx].row,path[pathIdx].col,eachRoleData.matType);\n                cc.timer.loop(reachCallback,0.3,path.length-1,\"GameMap\",eachRoleData);\n            }\n        }\n    },\n\n    createGrid(rowKey,colKey){\n        var grid = new cc.Node();\n        grid.name = rowKey + \"_\" + colKey;\n        grid.parent = this.node;\n        var pos = this.curPassData.getGridPosByRowCol(rowKey,colKey);\n        grid.x = pos.x;\n        grid.y = pos.y;\n        return grid;\n    },\n\n    addToGrid(rowKey,colKey,matType){\n        var grid = this.node.getChildByName(rowKey+\"_\"+colKey);\n        if(!grid){\n            grid = this.createGrid(rowKey,colKey);\n        }\n        var matTypeToName = this.commonConfig.matTypeToName;\n        var matShowOrderMap = this.commonConfig.matShowOrderMap;\n        var matIcon = this.commonConfig.matIcon\n\n        var spNode = this.gridPool.get();\n        var sp = spNode.getComponent(cc.Sprite);\n        sp.spriteFrame = this.atlas.getSpriteFrame(matIcon[matType]);\n        spNode.parent = grid;\n\n        var matName = matTypeToName[matType].matName;\n        spNode.zIndex = matShowOrderMap[matName];\n        spNode.matType = matType;\n        return spNode;\n    },\n\n    removeFromGrid(rowKey,colKey,matType){\n        var grid = this.node.getChildByName(rowKey+\"_\"+colKey);\n        if(grid){\n            var children = grid.children;\n            for (var i = 0; i < children.length; ++i) {\n                if(children[i]&&children[i].matType == matType){\n                    this.gridPool.push(children[i]);\n                    break;\n                }\n            }\n        }\n    },\n\n    removeAllFromGrid(rowKey,colKey,matType){\n        var grid = this.node.getChildByName(rowKey+\"_\"+colKey);\n        if(grid){\n            var children = grid.children;\n            for (var i = children.length-1; i >=0 ; --i) {\n                if(children[i]&&children[i].matType == matType){\n                    this.gridPool.push(children[i]);\n                }\n            }\n        }\n    },\n\n    mouseLeaveHandle(event){\n        this.isMouseDown = false;\n    },\n    mouseEnterHandle(event){\n        \n    },\n    mouseDownHandle(event){\n        this.mousePos = event.getLocation();\n        this.isMouseDown = true;\n    },\n    mouseMoveHandle(event){\n        if(!this.curPassData.configData.mapInfo.isDrag)\n            return;\n\n        if(!this.isMouseDown){\n            return;\n        }\n\n        var curMousePos = event.getLocation();\n        if(Math.abs(this.mousePos.x - curMousePos.x)<2&&\n           Math.abs(this.mousePos.y - curMousePos.y)<2){\n            return;\n        }\n\n        var pos = event.getDelta();\n        this.isMouseMove = true;\n        var newX = this.node.x+pos.x;\n        var newY = this.node.y+pos.y;\n        this.updateMapPos(newX,newY);\n        cc.globalEvent.emit(\"CurData:UpdateRoadPos\",{x:newX,y:newY});\n    },\n    mouseUpHandle(event){\n        if(!this.isMouseDown){\n            return;\n        }\n        this.isMouseDown = false;\n        if(this.isMouseMove){\n            this.isMouseMove = false;\n            return;\n        }\n        this.isMouseMove = false;\n\n        var oldPos = event.getLocation();\n        var newPos = this.node.convertToNodeSpace(cc.v2(oldPos.x, oldPos.y));\n        var gridInfo = this.curPassData.getGridInfoByMousePos(newPos.x,newPos.y);\n        if(!gridInfo){\n            return;\n        }\n\n        var rowKey = gridInfo.row;\n        var colKey = gridInfo.col;\n\n        //cc.log(\"click\",rowKey,colKey);\n        if(this.permitNextTurn){\n            this.curPassData.playerToHandle(rowKey,colKey);\n        }else{\n            cc.log(\"GameMap:mouseUpHandle permitNextTurn\",this.permitNextTurn);\n        }\n    },\n\n    updateGrid(rowKey,colKey,material){\n        var grid = this.node.getChildByName(rowKey+\"_\"+colKey);\n        if(grid){\n            var children = grid.children;\n            for (var i = children.length-1; i >=0 ; --i) {\n                this.gridPool.push(children[i]);\n            }\n        }\n\n        if(!material){\n            return;\n        }\n\n        for(var matType in material){\n            var alias = this.commonConfig.matTypeToName[matType].matAlias;\n            if(alias==\"role\")continue;\n            if(!material[matType]){\n                continue;\n            }\n            var sameMatSize = material[matType];\n            if(sameMatSize<=0)continue;\n            for(var j=0;j<sameMatSize;j++){\n                this.addToGrid(rowKey,colKey,matType);\n            }\n        }\n    },\n});\n"]}