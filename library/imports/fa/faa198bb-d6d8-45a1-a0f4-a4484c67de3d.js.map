{"version":3,"sources":["../../../../assets/scripts/assets/scripts/Utils.js"],"names":["cc","Class","getPropertyOrInit","obj","args","undefined","argsLen","arguments","length","i","getProperty","setIfUndef","setProperty","alert","title","yesCallback","noCallback","curScene","director","getScene","prefab","resMgr","getRes","resName","instantiate","center","parent","name","alertScript","getComponent","init","openLoading","closeLoading","loading","child","getChildByName","destroy","loadScene","sceneName","callback","err","sceneAssets","runSceneImmediate","scene","loadedResName","loadedNum","totalNum","log","isValid","loadingScript","setProgress","clone","jsonStr","JSON","stringify","parse","getMapCount","map","count","key","delByObj","srcObj","delObj","srcVal","hasFind","delKey","loadNetImg","remoteUrl","node","width","height","loader","load","url","type","texture","sp","Sprite","spriteFrame","SpriteFrame","x","winSize","y","random","min","max","Math","floor"],"mappings":"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","file":"Utils.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["cc.Class({\n    getPropertyOrInit(obj,...args){\n        if(!obj)return undefined;\n        var argsLen = arguments.length-1;\n        for(var i=0;i<argsLen;i++){\n            if(!obj[args[i]]){\n                obj[args[i]] = {}\n            }\n            obj = obj[args[i]];\n        }\n        return obj;\n    },\n    getProperty(obj,...args){\n        if(!obj)return undefined;\n        var argsLen = arguments.length-1;\n        for(var i=0;i<argsLen;i++){\n            if(!obj[args[i]]){\n                return undefined;\n            }\n            obj = obj[args[i]];\n        }\n        return obj;\n    },\n    setIfUndef(obj,...args){\n        if(!obj)return undefined;\n        var argsLen = arguments.length-1;\n        for(var i=0;i<argsLen-2;i++){\n            if(!obj[args[i]]){\n                obj[args[i]] = {}\n            }\n            obj = obj[args[i]];\n        }\n        if(obj[args[argsLen-2]]){\n            return;\n        }\n        obj[args[argsLen-2]] = args[argsLen-1];\n    },\n    setProperty(obj,...args){\n        if(!obj)return undefined;\n        var argsLen = arguments.length-1;\n        for(var i=0;i<argsLen-2;i++){\n            if(!obj[args[i]]){\n                obj[args[i]] = {}\n            }\n            obj = obj[args[i]];\n        }\n        obj[args[argsLen-2]] = args[argsLen-1];\n    },\n    alert(title,yesCallback,noCallback){\n        var curScene = cc.director.getScene();\n        var prefab = cc.resMgr.getRes(cc.resName.alert);\n        var alert = cc.instantiate(prefab);\n        this.center(alert);\n        alert.parent = curScene;\n        alert.name = \"__ALERT_WND__\";\n        var alertScript = alert.getComponent(\"Alert\");\n        alertScript.init(title,yesCallback,noCallback);\n        return alert;\n    },\n    openLoading(){\n        this.closeLoading();\n        var curScene = cc.director.getScene();\n        var prefab = cc.resMgr.getRes(cc.resName.loading);\n        var loading = cc.instantiate(prefab);\n        this.center(loading);\n        loading.parent = curScene;\n        loading.name = \"__LOADING_WND__\";\n        return loading;\n    },\n    closeLoading(){\n        var curScene = cc.director.getScene();\n        var child = curScene.getChildByName(\"__LOADING_WND__\");\n        if(child){\n            child.destroy();\n        }\n    },\n    loadScene(sceneName,callback){\n        var loading = this.openLoading();\n        cc.resMgr.loadScene(sceneName,function(err){\n            if(err){\n                return;\n            }\n            var sceneAssets = cc.resMgr.getRes(sceneName);\n            cc.director.runSceneImmediate(sceneAssets.scene);\n            if(callback){\n                callback();\n            }\n        },function(err,loadedResName,loadedNum,totalNum){\n            if(err){\n                return;\n            }\n            cc.log(\"Utils:loadScene\",loadedResName,loadedNum,totalNum);\n            if(cc.isValid(loading)){\n                var loadingScript = loading.getComponent(\"Loading\");\n                loadingScript.setProgress(loadedNum,totalNum);\n            }\n        });\n    },\n    clone(obj){\n        if(!obj){\n            cc.log(\"Utils:clone obj is undefined\");\n            return undefined;\n        }\n        var jsonStr = JSON.stringify(obj);\n        return JSON.parse(jsonStr);\n    },\n    getMapCount(map){\n        var count = 0;\n        for(var key in map){\n            if(map[key]){\n                count++;\n            }\n        }\n        return count;\n    },\n    delByObj(srcObj,delObj){\n        for(var key in srcObj){\n            var srcVal = srcObj[key];\n            if(!srcVal)continue;\n            var hasFind = true;\n            for(var delKey in delObj){\n                if(srcVal[delKey] != delObj[delKey]){\n                    hasFind = false;\n                    break;\n                }\n            }\n            if(hasFind){\n                delete srcObj[key];\n                break;\n            }\n        }\n    },\n    loadNetImg(remoteUrl,node,width,height){\n        if(!remoteUrl||!node)return;\n        cc.loader.load({url: remoteUrl, type: 'png'}, function (err, texture) {\n            // Use texture to create sprite frame\n            if(err){\n                cc.log(\"Utils:loadNetImg failure\",remoteUrl);\n                return;\n            }\n            if(cc.isValid(node)){\n                var sp = node.getComponent(cc.Sprite);\n                sp.spriteFrame = new cc.SpriteFrame(texture);\n                node.width = width;\n                node.height = height;\n            }\n        });\n    },\n    center(node){\n        node.x = cc.winSize.width*0.5;\n        node.y = cc.winSize.height*0.5;\n    },\n    random(min,max){\n        return Math.floor(Math.random()*(max-min+1)+min);\n    },\n})"]}