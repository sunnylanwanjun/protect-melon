{"version":3,"sources":["../../../../../assets/scripts/data/assets/scripts/data/MelonData.js"],"names":["CurData","require","cc","Class","extends","ctor","initNewTurn","turnIdx","curTurnIdx","turnData","curTurnData","passItemConfig","resMgr","getRes","resName","passItem","data","passIdx","itemData","itemName","itemArr","i","push","utils","clone","itemConfig","mapData","configData","targetData","capperData","roleData","preTurnData","getPreTurn","key","path","getTurn","setPreTurnGrid","row","col","colData","preTurn","setIfUndef","setCurTurnGrid","setProperty","setNewMaterial","newMaterial","oldMaterial","getProperty","topMapData","topColData","material","checkUpdateTree","nextTurn","chainToNext","globalEvent","emit","backTurn","gameResult","undefined","rowData","warn","isUpateTree","oldTypeMap","floor","target","capper","block","isGridContain","newTypeMap","newSearchData","matName","tree","searchMapData","buildMinTree","delObj","delByObj","updateSearchMapData","optimizeSearchMapData","deleteMinTree","minTree","r","c","rebuildTreeArr","deleteArr","deleteGrid","deleteNode","parentNode","fromRow","fromCol","children","childNode","bind","deleteInfo","resArr","resArrLen","traverseAround","aroundNode","addMinTree","updateMinTree_DelNode","rootRow","rootCol","delr","delc","subRoot","updateMinTree_AddNode","addr","addc","updateType","searchData","allMultiDir","rowKey","colKey","info","fromKey","fromOther","maxNum","maxInfo","priority","changeParent","sr","sl","fr","fl","hasOwnProperty","oldFromRow","oldFromCol","error","parseInt","getDir","buildGrid","len","forceBuild","isGridCanReach","fromLen","getPropertyOrInit","getDirPriority","slen","childRow","childCol","rootInfo","initSearchMapData","getQuad","tr","tc","rr","rc","fc","dir","quad","priorityCfg","priorityConfig","p","initGameData","quad1","quad2","quad3","quad4","ItemType","constVal","RoleState","doorData","selectItemObj","item","prototype","call","door","toDoor","akey","initEachGridData","matType","sameMatSize","alias","MatName","matAlias","state","Live","getSelectItemType","type","selectItem","itemType","unSelectItem","lastItem","length","times","pop","log","consumeItem","addItem","itemNum","playerToHandle","gameConfig","isEditorMode","needRoleToHandle","needNextTurn","needChainToNext","playerToHandleWithItem","playerToHandleWithoutItem","roleToHandle","Block","isGrid_CanBe_Destroy_Or_Add","MatType","block_1","Destroy","destroyFloor","Capper","capper_1","Freeze","typeMap","role","findRole","freezeBout","Protect","Pocket","target_1","preSelectItemType","floor_3","floor_1","water_1","floor_2","isSuccess","judgeFunc","caller","idx","j","roleToGrid","roleInfo","toRow","toCol","hasPath","minPathInfo","minSearchData","pathInfo","freeze","effectBout","endPathInfo","userData","saveMaxPass","savePass"],"mappings":"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","file":"MelonData.js","sourceRoot":"../../../../../assets/scripts/data","sourcesContent":["var CurData = require(\"CurData\");\ncc.Class({\n    extends:CurData,\n    ctor(){\n\n    },\n\n    initNewTurn(turnIdx){\n        this.curTurnIdx = turnIdx;\n        this.turnData[this.curTurnIdx] = {};\n        \n        this.curTurnData = this.turnData[this.curTurnIdx];\n        \n        if(turnIdx==0){\n            var passItemConfig = cc.resMgr.getRes(cc.resName.passItem).data;\n            var passItem = passItemConfig[\"pass\"+this.passIdx];\n            var itemData = {};\n            for(var itemName in passItem){\n                var itemArr = [];\n                for(var i=0;i<passItem[itemName];i++){\n                    itemArr.push(cc.utils.clone(this.itemConfig[itemName]));\n                }\n                itemData[itemName] = itemArr\n            }\n            this.curTurnData.itemData = itemData;\n            \n            this.curTurnData.mapData = cc.utils.clone(this.configData.mapData);\n\n            this.curTurnData.targetData = [];\n            this.curTurnData.capperData = [];\n            this.curTurnData.roleData = [];\n        }else{\n            var preTurnData = this.getPreTurn();\n            this.curTurnData.itemData = cc.utils.clone(preTurnData.itemData);\n\n            this.curTurnData.mapData = {};\n\n            this.curTurnData.targetData = cc.utils.clone(preTurnData.targetData);\n            this.curTurnData.capperData = cc.utils.clone(preTurnData.capperData);\n            this.curTurnData.roleData = cc.utils.clone(preTurnData.roleData);\n\n            //清空路径信息，回退时不需要路径信息，否则也会表现出走路状态\n            for(var key in this.curTurnData.roleData){\n                this.curTurnData.roleData[key].path = [];\n            }\n        }\n    },\n\n    getTurn(turnIdx){\n        return this.turnData[turnIdx];\n    },\n\n    getPreTurn(){\n        return this.getTurn(this.curTurnIdx-1);\n    },\n\n    setPreTurnGrid(row,col,colData){\n        var preTurn = this.getTurn(this.curTurnIdx-1);\n        cc.utils.setIfUndef(preTurn.mapData,row,col,cc.utils.clone(colData));\n    },\n    setCurTurnGrid(row,col,colData){\n        cc.utils.setProperty(this.curTurnData.mapData,row,col,cc.utils.clone(colData));\n    },\n    setNewMaterial(row,col,newMaterial){\n        var oldMaterial = cc.utils.getProperty(this.topMapData,row,col,\"material\");\n\n        var topColData = this.topMapData[row][col];\n        this.setPreTurnGrid(row,col,topColData);\n        topColData.material = newMaterial;\n        this.setCurTurnGrid(row,col,topColData);\n\n        var newMaterial = cc.utils.getProperty(this.topMapData,row,col,\"material\");\n        this.checkUpdateTree(row,col,oldMaterial,newMaterial);\n    },\n\n    nextTurn(chainToNext){\n        this.curTurnData.chainToNext = chainToNext;\n        this.initNewTurn(this.curTurnIdx+1);\n        cc.globalEvent.emit(\"CurData:UpdateMap\");\n        cc.globalEvent.emit(\"CurData:UpdateItemlist\");\n    },\n\n    backTurn(){\n        if(this.curTurnIdx>1){\n            //结果数据还原\n            this.gameResult = undefined;\n            cc.globalEvent.emit(\"CurData:UpdateResult\",this.gameResult);\n\n            do{\n                this.initNewTurn(this.curTurnIdx-1);\n\n                //恢复topMapData\n                var preTurn = this.getTurn(this.curTurnIdx-1);\n                //清空路径信息，回退时不需要路径信息，否则也会表现出走路状态\n                for(var key in preTurn.roleData){\n                    preTurn.roleData[key].path = [];\n                }\n\n                for(var row in preTurn.mapData){\n                    var rowData = preTurn.mapData[row];\n                    for(var col in rowData){\n                        var oldMaterial = cc.utils.getProperty(this.topMapData,row,col,\"material\");\n                        this.topMapData[row][col]=cc.utils.clone(rowData[col]);\n                        var newMaterial = cc.utils.getProperty(this.topMapData,row,col,\"material\");\n                        this.checkUpdateTree(row,col,oldMaterial,newMaterial);\n                    }\n                }\n\n                cc.globalEvent.emit(\"CurData:UpdateMap\");\n                cc.globalEvent.emit(\"CurData:UpdateItemlist\");\n\n            }while(this.curTurnIdx>1&&this.getPreTurn().chainToNext)\n        }else{\n            cc.warn(\"MelonData:backTurn is the frontest\");\n        }\n    },\n\n    checkUpdateTree(row,col,oldMaterial,newMaterial){\n\n        var isUpateTree = false;\n        var oldTypeMap = {floor:0,target:0,capper:0,block:0};\n        this.isGridContain(oldMaterial,oldTypeMap);\n\n        var newTypeMap = {floor:0,target:0,capper:0,block:0};\n        this.isGridContain(newMaterial,newTypeMap);\n\n        //新增tree\n        if(oldTypeMap.capper<newTypeMap.capper){\n            var newSearchData = {row:row,col:col,matName:\"capper_1\",tree:{}};\n            this.searchMapData.push(newSearchData);\n            this.buildMinTree(newSearchData.row,newSearchData.col,newSearchData.tree,newSearchData.row,newSearchData.col);\n            isUpateTree = true;\n        }\n\n        if(oldTypeMap.target<newTypeMap.target){\n            var newSearchData = {row:row,col:col,matName:\"target_1\",tree:{}};\n            this.searchMapData.push(newSearchData);\n            this.buildMinTree(newSearchData.row,newSearchData.col,newSearchData.tree,newSearchData.row,newSearchData.col);\n            isUpateTree = true;\n        }\n\n        //删除tree\n        if(oldTypeMap.capper>newTypeMap.capper){\n            var delObj = {row:row,col:col,matName:\"capper_1\"};\n            cc.utils.delByObj(this.searchMapData,delObj);\n            isUpateTree = true;\n        }\n\n        if(oldTypeMap.target>newTypeMap.target){\n            var delObj = {row:row,col:col,matName:\"target_1\"};\n            cc.utils.delByObj(this.searchMapData,delObj);\n            isUpateTree = true;\n        }\n\n        //更新tree\n        if(oldTypeMap.floor<newTypeMap.floor||\n           oldTypeMap.block>newTypeMap.block){\n            this.updateSearchMapData(row,col,\"add\");\n            isUpateTree = true;\n        }\n\n        if(oldTypeMap.floor>newTypeMap.floor||\n            oldTypeMap.block<newTypeMap.block){\n             this.updateSearchMapData(row,col,\"del\");\n             isUpateTree = true;\n        }\n\n        if(isUpateTree){\n            this.optimizeSearchMapData();\n        }\n    },\n\n    deleteMinTree(minTree,r,c){\n        var rebuildTreeArr = {};\n        var deleteArr = {};\n        var deleteGrid = function(row,col){\n            var deleteNode = cc.utils.getProperty(minTree,row,col);\n            if(!deleteNode){\n                return;\n            }\n            var parentNode = cc.utils.getProperty(minTree,deleteNode.fromRow,deleteNode.fromCol);\n            if(!parentNode){\n                return;\n            }\n            delete parentNode.children[row+\"_\"+col];\n\n            for(var key in deleteNode.children){\n                var childNode = deleteNode.children[key];\n                deleteGrid(childNode.row,childNode.col);\n            }\n            delete minTree[row][col];\n            deleteArr[row+\"_\"+col]={row:row,col:col};\n        }.bind(this);\n        deleteGrid(r,c);\n\n        for(var key in deleteArr){\n            var deleteInfo = deleteArr[key];\n            var resArr = [];\n            var resArrLen = this.traverseAround(deleteInfo.row,deleteInfo.col,resArr,\n                function(row,col){\n                    var aroundNode = cc.utils.getProperty(minTree,row,col);\n                    if (aroundNode) {\n                        return true;\n                    }else{\n                        return false;\n                    }\n            },this);\n            for(var i=0;i<resArrLen;i++){\n                var aroundNode = resArr[i];\n                rebuildTreeArr[aroundNode.row+\"_\"+aroundNode.col]=aroundNode;\n            }\n        }\n        return rebuildTreeArr;\n    },\n\n    addMinTree(minTree,r,c){\n\n        var rebuildTreeArr=[];\n        var resArr = [];\n        var resArrLen = this.traverseAround(r,c,resArr,\n            function(row,col){\n                var aroundNode = cc.utils.getProperty(minTree,row,col);\n                if (aroundNode) {\n                    return true;\n                }else{\n                    return false;\n                }\n        },this);\n        for(var i=0;i<resArrLen;i++){\n            var aroundNode = resArr[i];\n            rebuildTreeArr[aroundNode.row+\"_\"+aroundNode.col]=aroundNode;\n        }\n\n        return rebuildTreeArr;\n    },\n\n    updateMinTree_DelNode(rootRow,rootCol,minTree,delr,delc){\n        var rebuildTreeArr = this.deleteMinTree(minTree,delr,delc);\n        for(var key in rebuildTreeArr){\n            var subRoot = rebuildTreeArr[key];\n            this.buildMinTree(rootRow,rootCol,minTree,subRoot.row,subRoot.col);\n        }\n    },\n\n    updateMinTree_AddNode(rootRow,rootCol,minTree,addr,addc){\n        var rebuildTreeArr = this.addMinTree(minTree,addr,addc);\n        for(var key in rebuildTreeArr){\n            var subRoot = rebuildTreeArr[key];\n            this.buildMinTree(rootRow,rootCol,minTree,subRoot.row,subRoot.col);\n        }\n    },\n\n    updateSearchMapData(row,col,updateType){\n        for(var key in this.searchMapData){\n            var searchData = this.searchMapData[key];\n            if(!searchData){\n                continue;\n            }\n            if(updateType==\"del\"){\n                this.updateMinTree_DelNode(searchData.row,searchData.col,searchData.tree,row,col);\n            }else{\n                this.updateMinTree_AddNode(searchData.row,searchData.col,searchData.tree,row,col);\n            }\n        }\n    },\n\n    optimizeSearchMapData(){\n        var allMultiDir = {};\n        for(var key in this.searchMapData){\n            var searchData = this.searchMapData[key];\n            if(!searchData){\n                continue;\n            }\n            var tree = searchData.tree;\n            for(var rowKey in tree){\n                var rowData = tree[rowKey];\n                if(!rowData)continue;\n                for(var colKey in rowData){\n                    var info = rowData[colKey];\n                    if(!info)continue;\n                    for(var fromKey in info.fromOther){\n                        allMultiDir[fromKey] = allMultiDir[fromKey] || 0;\n                        allMultiDir[fromKey]++;\n                    }\n                }\n            }\n        }\n\n        for(var key in this.searchMapData){\n            var searchData = this.searchMapData[key];\n            if(!searchData){\n                continue;\n            }\n            var tree = searchData.tree;\n            for(var rowKey in tree){\n                var rowData = tree[rowKey];\n                if(!rowData)continue;\n                for(var colKey in rowData){\n                    var info = rowData[colKey];\n                    if(!info||!info.fromOther)continue;\n                    var maxNum = 1;\n                    var maxInfo = info;\n                    var fromOther = info.fromOther;\n                    for(var fromKey in fromOther){\n                        if(!fromOther[fromKey])continue;\n                        if(!allMultiDir[fromKey])continue;\n                        if(allMultiDir[fromKey]>maxNum){\n                            maxInfo = fromOther[fromKey];\n                            maxNum = allMultiDir[fromKey];\n                        }\n                        else if(allMultiDir[fromKey]==maxNum){\n                            if(fromOther[fromKey].priority<maxInfo.priority){\n                                maxInfo = fromOther[fromKey];\n                                maxNum = allMultiDir[fromKey];\n                            }\n                        }\n                    }\n                    if(maxInfo!==info){\n                        this.changeParent(tree,info,rowKey,colKey,maxInfo.fromRow,maxInfo.fromCol);\n                    }\n                }\n            }\n        }\n    },\n\n    changeParent(minTree,info,sr,sl,fr,fl){\n        if(info.hasOwnProperty(\"fromRow\")){\n            var oldFromRow = info.fromRow;\n            var oldFromCol = info.fromCol;\n            var parentNode = minTree[oldFromRow][oldFromCol];\n            if(parentNode){\n                delete parentNode.children[sr+\"_\"+sl];\n            }else{\n                cc.error(\"parent is null\",oldFromRow,oldFromCol);\n            }\n        }\n\n        if(sr!=fr||sl!=fl){\n            var parentNode = minTree[fr][fl];\n            parentNode.children[sr+\"_\"+sl] = {row:sr,col:sl};\n        }\n\n        info.fromRow=parseInt(fr);\n        info.fromCol=parseInt(fl);\n    },\n\n    getDir(row,col,fromRow,fromCol){\n        /*\n                0\n            5       1\n                       \n            4       2\n                3\n        */\n        if(col%2==0){\n            if(row==fromRow){\n                if(col==fromCol+1){\n                    return \"5\";\n                }else if(col==fromCol-1){\n                    return \"1\";\n                }else if(col==fromCol){\n                    return \"-1\";//自己\n                }else{\n                    return undefined;\n                }\n            }else if(row==fromRow+1){\n                if(col==fromCol+1){\n                    return \"4\";\n                }else if(col==fromCol-1){\n                    return \"2\";\n                }else if(col==fromCol){\n                    return \"3\";\n                }else{\n                    return undefined;\n                }\n            }else if(row==fromRow-1){\n                if(col==fromCol){\n                    return \"0\";\n                }else{\n                    return undefined;\n                }\n            }else{\n                return \"-2\";//传送\n            }\n        }else{\n        /*\n            0\n        5       1\n                    \n        4       2\n            3\n        */\n            if(row==fromRow){\n                if(col==fromCol+1){\n                    return \"4\";\n                }else if(col==fromCol-1){\n                    return \"2\";\n                }else if(col==fromCol){\n                    return \"-1\";//自己\n                }else{\n                    return undefined;\n                }\n            }else if(row==fromRow+1){\n                if(col==fromCol){\n                    return \"3\";\n                }else{\n                    return undefined;\n                }\n            }else if(row==fromRow-1){\n                if(col==fromCol+1){\n                    return \"5\";\n                }else if(col==fromCol-1){\n                    return \"1\";\n                }else if(col==fromCol){\n                    return \"0\";\n                }else{\n                    return undefined;\n                }\n                \n            }else{\n                return \"-2\";//传送\n            }\n        }\n    },\n\n    buildMinTree(rootRow,rootCol,minTree,row,col){\n        var buildGrid = function(sr,sl,fr,fl,len,forceBuild){\n            if(!this.isGridCanReach(sr,sl))\n                return;\n            var fromLen = len + 1;\n            var info = cc.utils.getPropertyOrInit(minTree,sr,sl);\n            if(!forceBuild&&info.hasOwnProperty(\"fromLen\")&&info.fromLen<=fromLen){\n                if(info.fromLen==fromLen&&!info.children[fr+\"_\"+fl]){\n                    info.fromOther[sr+\"_\"+sl+\"_\"+fr+\"_\"+fl] = {\n                        fromRow:parseInt(fr),\n                        fromCol:parseInt(fl),\n                        fromLen:fromLen,\n                        priority:this.getDirPriority(rootRow,rootCol,sr,sl,fr,fl),\n                    };\n                }\n                return;\n            }\n\n            var priority = this.getDirPriority(rootRow,rootCol,sr,sl,fr,fl);\n            this.changeParent(minTree,info,sr,sl,fr,fl);\n            info.fromLen=fromLen;\n            info.priority=priority;\n            info.children = info.children || {};\n            info.fromOther = {}\n            info.fromOther[sr+\"_\"+sl+\"_\"+info.fromRow+\"_\"+info.fromCol] = {\n                fromRow:info.fromRow,\n                fromCol:info.fromCol,\n                fromLen:info.fromLen,\n                priority:priority,\n            };\n\n            var resArr = [];\n            var slen = this.traverseAround(sr,sl,resArr,this.isGridCanReach,this);\n            for(var i=0;i<slen;i++){\n                var childRow = resArr[i].row;\n                var childCol = resArr[i].col;\n                if(childRow==fr&&childCol==fl){\n                    continue;\n                }\n                buildGrid(resArr[i].row,resArr[i].col,sr,sl,fromLen);\n            }\n        }.bind(this);\n        var rootInfo = cc.utils.getProperty(minTree,row,col);\n        if(rootInfo){\n            buildGrid(row,col,rootInfo.fromRow,rootInfo.fromCol,rootInfo.fromLen-1,true);\n        }else{\n            buildGrid(row,col,row,col,-1,true);\n        }\n        \n    },\n\n    initSearchMapData(){\n        for(var key in this.curTurnData.targetData){\n            var rootInfo = this.curTurnData.targetData[key];\n            var searchData = {row:rootInfo.row,col:rootInfo.col,matName:rootInfo.matName,tree:{}};\n            this.searchMapData.push(searchData);\n            this.buildMinTree(searchData.row,searchData.col,searchData.tree,searchData.row,searchData.col);\n        }\n        for(var key in this.curTurnData.capperData){\n            var rootInfo = this.curTurnData.capperData[key];\n            var searchData = {row:rootInfo.row,col:rootInfo.col,matName:rootInfo.matName,tree:{}};\n            this.searchMapData.push(searchData);\n            this.buildMinTree(searchData.row,searchData.col,searchData.tree,searchData.row,searchData.col);\n        }\n        this.optimizeSearchMapData();\n    },\n\n    getQuad(tr,tc,rr,rc){\n        if(rc<=tc){\n            if(rr>=tr){\n                return \"quad2\"\n            }else{\n                return \"quad3\"\n            }\n        }else{\n            if(rr>=tr){\n                return \"quad1\"\n            }else{\n                return \"quad4\"\n            }\n        }\n    },\n\n    //target row\n    //target col\n    //role row\n    //role col\n    //from row\n    //from col\n    getDirPriority(tr,tc,rr,rc,fr,fc){\n        var dir = this.getDir(rr,rc,fr,fc);\n        var quad = this.getQuad(tr,tc,rr,rc);\n        var priorityCfg = this.priorityConfig[quad];\n        var p = priorityCfg[dir] || 0;\n        return p;\n    },\n\n    initGameData(){\n        this.turnData = [];\n\n        this.priorityConfig = {\n\n            /*\n                     0                        0\n                5        1                1       5\n                4        2                2       4\n                     0                        0    \n\n\n                    0                          0\n                2       4                 2        4\n                1       5                 1        5\n                    0                          0\n\n\n            */\n\n\n            /*\n                0\n            1       5\n            2       4\n                0\n            */\n\n            quad1:{\n                [\"0\"]:0,\n                [\"1\"]:5,\n                [\"2\"]:4,\n                [\"3\"]:0,\n                [\"4\"]:2,\n                [\"5\"]:1,\n            },\n\n            /*\n                0\n            5       1\n            4       2\n                0\n            */\n\n            quad2:{\n                [\"0\"]:0,\n                [\"1\"]:1,\n                [\"2\"]:2,\n                [\"3\"]:0,\n                [\"4\"]:4,\n                [\"5\"]:5\n            },\n\n            /*\n                0\n            2       4\n            1       5\n                0\n            */\n\n            quad3:{\n                [\"0\"]:0,\n                [\"1\"]:4,\n                [\"2\"]:5,\n                [\"3\"]:0,\n                [\"4\"]:1,\n                [\"5\"]:2,\n            },\n\n            /*\n                0\n            2       4\n            1       5\n                0\n            */\n\n            quad4:{\n                [\"0\"]:0,\n                [\"1\"]:4,\n                [\"2\"]:5,\n                [\"3\"]:0,\n                [\"4\"]:1,\n                [\"5\"]:2,\n            }\n        }\n\n        this.ItemType = cc.constVal.ItemType;\n        this.RoleState = cc.constVal.RoleState;\n        this.gameResult = undefined;\n        cc.globalEvent.emit(\"CurData:UpdateResult\",this.gameResult);\n\n        //传送门\n        this.doorData = {};\n        //记录每个格子最新修改的数据\n        this.topMapData = cc.utils.clone(this.configData.mapData);\n        //针对每个目标点建立最小生成树\n        this.searchMapData = [\n            /*\n            [0]={\n                row:rootInfo.row,col:rootInfo.col,matName:rootInfo.matName\n                tree:{\n                    [row]={\n                        [col]={\n                            fromRow:row,fromCol:col,fromLen:length,\n                        }\n                    }\n                }\n            }\n            */\n        ]\n        this.selectItemObj = undefined;\n        this.itemConfig = cc.resMgr.getRes(cc.resName.item).data;\n\n        this.initNewTurn(0);\n\n        CurData.prototype.initGameData.call(this);  \n\n        //建立传送门\n        for(var key in this.doorData){\n            var door = this.doorData[key];\n            door.toDoor = {}\n            for(var akey in this.doorData){\n                var toDoor = this.doorData[akey];\n                if(door.row==toDoor.row&&door.col==toDoor.col)continue;\n                if(door.matName == toDoor.matName){\n                    door.toDoor[toDoor.row+\"_\"+toDoor.col]=toDoor;\n                }\n            }\n        }\n\n        this.initSearchMapData();\n        this.nextTurn();\n\n        cc.globalEvent.emit(\"CurData:InitGameData\");\n    },\n    \n    initEachGridData(material,rowKey,colKey){\n        CurData.prototype.initEachGridData.call(this,material,rowKey,colKey);\n        for(var matType in material){\n            if(!material[matType]){\n                continue;\n            }\n            var sameMatSize = material[matType];\n            for(var i=0;i<sameMatSize;i++){\n                var alias = this.MatName[matType].matAlias;\n                var matName = this.MatName[matType].matName;\n                switch(alias){\n                    case \"target\":\n                        this.curTurnData.targetData.push({row:rowKey,col:colKey,\n                            matName:matName,matType:matType});\n                    break;\n                    case \"capper\":\n                        this.curTurnData.capperData.push({row:rowKey,col:colKey,\n                            matName:matName,matType:matType});\n                    break;\n                    case \"role\":\n                        //[{row:xx,col:xx},{row:xx,col:xx},...,{row:rowKey,}]\n                        this.curTurnData.roleData.push({row:rowKey,col:colKey,\n                            matName:matName,\n                            matType:matType,\n                            path:[],\n                            state:this.RoleState.Live});\n                    break;\n                    case \"door\":\n                        this.doorData[rowKey+\"_\"+colKey] = {row:rowKey,col:colKey,\n                            matName:matName,matType:matType};\n                    break;\n                }\n            }\n        }\n    },\n    //////////////////////////////////////////////////////////////\n    //游戏操作流程\n    getSelectItemType(){\n        if(!this.selectItemObj){\n            return undefined;\n        }\n        return this.selectItemObj.type;\n    },\n    selectItem(itemType){\n        this.unSelectItem();\n        var itemArr = this.curTurnData.itemData[itemType];\n        var lastItem = undefined;\n        while(itemArr.length>0){\n            lastItem = itemArr[itemArr.length-1];\n            if(lastItem.times > 0){\n                break;\n            }\n            itemArr.pop();\n        }\n        if(itemArr.length==0){\n            cc.warn(\"MelonData:selectItem item\",itemType,\"has use up\");\n            return;\n        }\n        this.selectItemObj = lastItem;\n    },\n    unSelectItem(){\n        if(!this.selectItemObj){\n            cc.log(\"MelonData:unSelectItem selectItemObj is null\");\n            return;\n        }\n        this.selectItemObj = undefined;\n        cc.globalEvent.emit(\"CurData:UpdateItemlist\");\n    },\n    consumeItem(){\n        var itemArr = this.curTurnData.itemData[this.selectItemObj.type];\n        var lastItem = undefined;\n        while(itemArr.length>0){\n            lastItem = itemArr[itemArr.length-1];\n            if(lastItem.times > 0){\n                break;\n            }\n            itemArr.pop();\n        }\n        if(itemArr.length==0){\n            cc.warn(\"MelonData:selectItem item\",this.selectItemObj.type,\"has use up\");\n            return;\n        }\n        lastItem.times--;\n        if(lastItem.times<=0){\n            itemArr.pop();\n            this.selectItemObj = undefined;\n        }\n    },\n    addItem(itemType,itemNum){\n        cc.utils.setIfUndef(this.curTurnData.itemData,itemType,[]);\n        var itemArr = cc.utils.getProperty(this.curTurnData.itemData,itemType);\n        for(var i=0;i<itemNum;i++){\n            itemArr.push(cc.utils.clone(this.itemConfig[itemType]));\n        }\n\n        cc.globalEvent.emit(\"CurData:UpdateItemlist\");\n    },\n    playerToHandle(row,col){\n\n        if(this.gameResult){\n            cc.log(\"!!!!!!!!!!!!!MelonData:playerToHandle hasResult\",this.gameResult);\n            cc.globalEvent.emit(\"CurData:UpdateResult\",this.gameResult);\n            if(!cc.gameConfig.isEditorMode){\n                return;\n            }\n        }\n\n        this.needRoleToHandle = false;\n        this.needNextTurn = false;\n        this.needChainToNext = false;\n        var material = cc.utils.getProperty(this.topMapData,row,col,\"material\");\n        if(!material){\n            return false;\n        }\n        if(this.selectItemObj){\n            this.playerToHandleWithItem(row,col,material);\n        }else{\n            this.playerToHandleWithoutItem(row,col,material);\n        }\n        if(this.needRoleToHandle){\n            this.roleToHandle();\n        }\n        if(this.needNextTurn){\n            this.nextTurn(this.needChainToNext);\n        }\n    },\n    playerToHandleWithItem(row,col,material){\n\n        switch(this.selectItemObj.type){\n            case this.ItemType.Block:\n                if(!this.isGrid_CanBe_Destroy_Or_Add(material)){\n                    cc.log(\"MelonData:playerToHandleWithItem\",row,col,\"can not add block\");\n                    return;\n                }\n                var newMaterial = cc.utils.clone(material);\n                newMaterial[this.MatType.block_1] = 1;\n                this.setNewMaterial(row,col,newMaterial);\n            break;\n            case this.ItemType.Destroy:\n                if(!this.isGrid_CanBe_Destroy_Or_Add(material)){\n                    cc.log(\"MelonData:playerToHandleWithItem\",row,col,\"can not destroy double\");\n                    return;\n                }\n                this.destroyFloor(row,col,material);\n            break;\n            case this.ItemType.Capper:\n                if(!this.isGrid_CanBe_Destroy_Or_Add(material)){\n                    cc.log(\"MelonData:playerToHandleWithItem\",row,col,\"can not add capper\");\n                    return;\n                }\n                //新建搜索树\n                var rootInfo = {row:row,col:col,matName:\"capper_1\"}\n                this.curTurnData.capperData.push(rootInfo);\n\n                //更新材质\n                var newMaterial = cc.utils.clone(material);\n                newMaterial[this.MatType.capper_1] = 1;\n                this.setNewMaterial(row,col,newMaterial);\n\n            break;\n            case this.ItemType.Freeze:\n                var typeMap = {role:0};\n                this.isGridContain(material,typeMap);\n                if(typeMap.role==0){\n                    cc.log(\"MelonData:playerToHandleWithItem\",row,col,\"has no role\");\n                    return;\n                }\n\n                var findRole = false;\n                for(var key in this.curTurnData.roleData){\n                    var roleData = this.curTurnData.roleData[key];\n                    if(!roleData)continue;\n                    if(roleData.row!=row||roleData.col!=col)continue;\n                    if(roleData.state==this.RoleState.Live){\n                        roleData.state = this.RoleState.Freeze;\n                        roleData.freezeBout = 0;\n                        findRole = true;\n                    }else if(roleData.state==this.RoleState.Protect){\n                        cc.log(\"MelonData:playerToHandleWithItem\",row,col,\"role is protect\");\n                    }\n                }\n\n                if(!findRole)\n                    return;\n\n            break;\n            case this.ItemType.Pocket:\n                var typeMap = {target:0};\n                this.isGridContain(material,typeMap);\n                if(typeMap.target==0){\n                    cc.log(\"MelonData:playerToHandleWithItem\",row,col,\"has no target\");\n                    return;\n                }\n\n                var delObj = {row:row,col:col,matName:\"target_1\"};\n                cc.utils.delByObj(this.curTurnData.targetData,delObj);\n\n                var newMaterial = cc.utils.clone(material);\n                newMaterial[this.MatType.target_1]--;\n                if(newMaterial[this.MatType.target_1]==0){\n                    delete newMaterial[this.MatType.target_1];\n                }\n                this.setNewMaterial(row,col,newMaterial);\n            break;\n            default:\n                return;\n            break;\n        }\n        var preSelectItemType = this.selectItemObj.type;\n        this.needNextTurn = true;\n        this.consumeItem();\n        if(!this.selectItemObj){\n            //双重粉碎完成后，怪物需要走一步\n            if(preSelectItemType == this.ItemType.Destroy){\n                this.needRoleToHandle = true;\n            }\n        }\n    },\n    isGridContain(material,typeMap){\n        if(!material)return;\n        for(var matType in material){\n            if(!material[matType]){\n                continue;\n            }\n            var sameMatSize = material[matType];\n            if(sameMatSize<=0)continue;\n            var alias = this.MatName[matType].matAlias;\n            if(typeMap.hasOwnProperty(alias)){\n                typeMap[alias]+=sameMatSize;\n            }\n        }\n    },\n    isGrid_CanBe_Destroy_Or_Add(material){\n        var typeMap = {floor:0,role:0,capper:0,block:0,target:0,door:0};\n        this.isGridContain(material,typeMap);\n        if(typeMap.floor==0||\n           typeMap.door>0||\n           typeMap.role>0||\n           typeMap.capper>0||\n           typeMap.block>0||\n           typeMap.target>0){\n            return false;\n        }\n        return true;\n    },\n    destroyFloor(row,col,material){\n        var floor_3 = material[this.MatType.floor_3];\n        if(floor_3&&floor_3>0){\n            return false;\n        }\n        var floor_1 = material[this.MatType.floor_1];\n        if(floor_1&&floor_1>0){\n            var newMaterial = {}\n            newMaterial[this.MatType.water_1] = 1;\n            this.setNewMaterial(row,col,newMaterial);\n            return true;\n        }\n        var floor_2 = material[this.MatType.floor_2];\n        if(floor_2&&floor_2>0){\n            var newMaterial = {}\n            newMaterial[this.MatType.floor_1] = 1;\n            this.setNewMaterial(row,col,newMaterial);\n            return true;\n        }\n        return false;\n    },\n    playerToHandleWithoutItem(row,col,material){\n        if(!this.isGrid_CanBe_Destroy_Or_Add(material)){\n            cc.log(\"MelonData:playerToHandleWithoutItem\",row,col,\"can not be destroy\");\n            return;\n        }\n        var isSuccess = this.destroyFloor(row,col,material);\n        if(isSuccess){\n            this.needRoleToHandle = true;\n            this.needNextTurn = true;\n        }\n    },\n    isGridCanReach(row,col){\n        if(row<0||col<0){\n            return false;\n        }\n        var material = cc.utils.getProperty(this.topMapData,row,col,\"material\");\n        if(!material){\n            return false;\n        }\n        var typeMap = {floor:0,block:0,door:0};\n        this.isGridContain(material,typeMap);\n        if((typeMap.floor==0&&typeMap.door==0)||\n           typeMap.block>0){\n            return false;\n        }\n        return true;\n    },\n    traverseAround(row,col,resArr,judgeFunc,caller){\n        row = parseInt(row);\n        col = parseInt(col);\n\n        var idx=0;\n        var i=(col%2==0)?row-1:row+1;\n        var j=col-1;\n        for(j=col-1;j<=col+1;j++){\n            if(judgeFunc.call(caller,i,j)){\n                resArr[idx]={row:i,col:j};\n                idx++;\n            }\n        }\n        i=row;\n        j=col-1;\n        if(judgeFunc.call(caller,i,j)){\n            resArr[idx]={row:i,col:j};\n            idx++;\n        }\n        i=row;\n        j=col+1;\n        if(judgeFunc.call(caller,i,j)){\n            resArr[idx]={row:i,col:j};\n            idx++;\n        }\n        i=(col%2==0)?row+1:row-1;\n        j=col;\n        if(judgeFunc.call(caller,i,j)){\n            resArr[idx]={row:i,col:j};\n            idx++;\n        }\n        var door = this.doorData[row+\"_\"+col];\n        if(door){\n            for(var key in door.toDoor){\n                var toDoor = door.toDoor[key];\n                if(judgeFunc.call(caller,toDoor.row,toDoor.col)){\n                    resArr[idx]={row:toDoor.row,col:toDoor.col};\n                    idx++;\n                }\n            }\n        }\n        return idx;\n    },\n    roleToGrid(roleInfo,toRow,toCol){\n        var matName=roleInfo.matName;\n        var row=roleInfo.row;\n        var col=roleInfo.col;\n\n        roleInfo.row=toRow;\n        roleInfo.col=toCol;\n\n        var oldMaterial = cc.utils.getProperty(this.topMapData,row,col,\"material\");\n        var newMaterial = cc.utils.clone(oldMaterial);\n        newMaterial[this.MatType[matName]]--;\n        this.setNewMaterial(row,col,newMaterial);\n\n        oldMaterial = cc.utils.getProperty(this.topMapData,toRow,toCol,\"material\");\n        newMaterial = cc.utils.clone(oldMaterial);\n        cc.utils.setIfUndef(newMaterial,this.MatType[matName],0);\n        newMaterial[this.MatType[matName]]++;\n\n        var typeMap = {target:0,capper:0};\n        this.isGridContain(newMaterial,typeMap);\n        if(typeMap.target>0){\n            this.gameResult = \"lost\";\n            cc.globalEvent.emit(\"CurData:UpdateResult\",this.gameResult);\n            cc.log(\"!!!!!!!!!!!!MelonData:roleToGrid hasResult\",this.gameResult);\n        }\n        \n        if(typeMap.capper>0){\n            var delObj = {row:toRow,col:toCol,matName:\"capper_1\"};\n            cc.utils.delByObj(this.curTurnData.capperData,delObj);\n            newMaterial[this.MatType.capper_1]--;\n            if(newMaterial[this.MatType.capper_1]==0){\n                delete newMaterial[this.MatType.capper_1];\n            }\n        }\n\n        this.setNewMaterial(toRow,toCol,newMaterial);\n    },\n    roleToHandle(){\n        var hasPath = false;\n        for(var akey in this.curTurnData.roleData){\n            var roleInfo = this.curTurnData.roleData[akey];\n            var minPathInfo = undefined;\n            var minSearchData = undefined;\n\n            for(var key in this.searchMapData){\n                var searchData = this.searchMapData[key];\n                var pathInfo = cc.utils.getProperty(searchData,\"tree\",roleInfo.row,roleInfo.col);\n                if(!pathInfo)continue;\n                if(!minPathInfo||minPathInfo.fromLen>pathInfo.fromLen){\n                    minPathInfo = pathInfo;\n                    minSearchData = searchData;\n                }\n            }\n\n            if(minPathInfo){\n                hasPath = true;\n\n                if(roleInfo.state == this.RoleState.Freeze){\n                    roleInfo.freezeBout++;\n                    if(roleInfo.freezeBout<this.itemConfig.freeze.effectBout){\n                        cc.log(\"MelonData:roleToHandle\",roleInfo.row,roleInfo.col,\"has freeze\");\n                    }else{\n                        roleInfo.state = this.RoleState.Protect;\n                        delete roleInfo.freezeBout;\n                    }\n                    continue;\n                }else if(roleInfo.state == this.RoleState.Protect){\n                    roleInfo.state = this.RoleState.Live;\n                }\n\n                if(roleInfo.matName==\"role_2\"){\n                    var endPathInfo = cc.utils.getProperty(minSearchData,\"tree\",minPathInfo.fromRow,minPathInfo.fromCol);\n                    roleInfo.path[0] = {row:minPathInfo.fromRow,col:minPathInfo.fromCol};\n                    roleInfo.path[1] = {row:endPathInfo.fromRow,col:endPathInfo.fromCol};\n                    this.roleToGrid(roleInfo,endPathInfo.fromRow,endPathInfo.fromCol);\n                }else{\n                    this.roleToGrid(roleInfo,minPathInfo.fromRow,minPathInfo.fromCol);\n                }\n            }\n        }\n        if(!hasPath){\n            this.gameResult = \"win\";\n            cc.globalEvent.emit(\"CurData:UpdateResult\",this.gameResult);\n            cc.log(\"!!!!!!!!!!!!MelonData:roleToHandle hasResult\",this.gameResult);\n            cc.userData.saveMaxPass(this.passIdx+1);\n            cc.userData.savePass(this.passIdx+1);\n        }\n    },\n})"]}