{"version":3,"sources":["Map.js"],"names":["cc","Class","extends","Component","onLoad","onDestroy","start","atlas","undefined","curPassData","passData","getCurPassData","commonConfig","getCommonConfig","goBackMapPos","mapInfo","configData","updateMapPos","posx","posy","x","y","node","setPosition","updateMap","mapSize","removeAllChildren","setContentSize","w","h","mapData","rowKey","rowData","colKey","colData","updateGrid","material","grid","getChildByName","removeChild","matTypeToName","matShowOrderMap","matType","sameMatSize","Node","name","parent","pos","getGridPosByRowCol","labelNode","zIndex","color","label","addComponent","Label","string","fontSize","j","spNode","sp","Sprite","spriteFrame","getSpriteFrame","matIcon","matName"],"mappings":"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","file":"Map.js","sourceRoot":"../../../../../assets/scripts/component","sourcesContent":["cc.Class({\n    extends:cc.Component,\n    \n    onLoad(){\n        \n    },\n    onDestroy(){\n        \n    },\n    start(){\n        this.atlas = undefined;\n        this.curPassData = cc.passData.getCurPassData();\n        this.commonConfig = cc.passData.getCommonConfig();\n    },\n    goBackMapPos(){\n        var mapInfo = this.curPassData.configData.mapInfo;\n        this.updateMapPos(mapInfo.posx,mapInfo.posy);\n    },\n    updateMapPos(x,y){\n        this.node.setPosition(x,y);\n    },\n    updateMap(){\n        var mapSize = this.curPassData.mapSize;\n        this.node.removeAllChildren();\n        this.node.setContentSize(mapSize.w,mapSize.h); \n\n        var mapData = this.curPassData.configData.mapData;\n        for(var rowKey in mapData){\n            var rowData = mapData[rowKey];\n            \n            for(var colKey in rowData){\n                var colData = rowData[colKey];\n                this.updateGrid(rowKey,colKey,colData.material);\n            }\n        }\n        this.goBackMapPos();\n    },\n    updateGrid(rowKey,colKey,material){\n\n        var grid = this.node.getChildByName(rowKey+\"_\"+colKey);\n        if(grid){\n            this.node.removeChild(grid);\n            grid = undefined;\n        }\n\n        if(!material){\n            return;\n        }\n        var matTypeToName = this.commonConfig.matTypeToName;\n        var matShowOrderMap = this.commonConfig.matShowOrderMap;\n\n        for(var matType in material){\n            if(!material[matType]){\n                continue;\n            }\n            var sameMatSize = material[matType];\n            if(sameMatSize<=0)continue;\n            if(!grid){\n                grid = new cc.Node();\n                grid.name = rowKey + \"_\" + colKey;\n                grid.parent = this.node;\n                var pos = this.curPassData.getGridPosByRowCol(rowKey,colKey);\n                grid.x = pos.x;\n                grid.y = pos.y;\n\n                var labelNode = new cc.Node();\n                labelNode.zIndex = 100;\n                labelNode.color = cc.color(0,255,0);\n                var label = labelNode.addComponent(cc.Label);\n                label.string = rowKey+\":\"+colKey+\"\\n\";\n                label.fontSize = 20;\n                labelNode.name = \"LabelNode\";\n                labelNode.parent = grid;\n            }\n            for(var j=0;j<sameMatSize;j++){\n                var spNode = new cc.Node();\n                var sp = spNode.addComponent(cc.Sprite);\n                sp.spriteFrame = this.atlas.getSpriteFrame(\n                    this.commonConfig.matIcon[matType]);\n                spNode.parent = grid;\n                var matName = matTypeToName[matType].matName;\n                spNode.zIndex = matShowOrderMap[matName];\n            }\n        }\n    },\n})"]}